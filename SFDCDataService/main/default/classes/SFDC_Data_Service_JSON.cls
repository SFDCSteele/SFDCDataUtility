//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class SFDC_Data_Service_JSON {

	public String objectName {get;set;} 
	public String fieldFullName {get;set;} 
	public String fieldLabel {get;set;} 
	public String fieldDescription {get;set;} 
	public String fieldType {get;set;} 
	public String fieldRelationshipLabel {get;set;} 
	public String fieldRelationshipName {get;set;} 
	public String fieldReferenceTo {get;set;} 
	public Boolean fieldExternalId {get;set;} 
	public Integer fieldLength {get;set;} 
	public Integer fieldPrecision {get;set;} 
	public Integer fieldScale {get;set;} 
	public Integer fieldVisibleLines {get;set;} 
	public String fieldDefaultValue {get;set;} 
	public String fieldPickListValues {get;set;} 

    public SFDC_Data_Service_JSON() {
        
    }

	public SFDC_Data_Service_JSON(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'objectName') {
						objectName = parser.getText();
					} else if (text == 'fieldFullName') {
						fieldFullName = parser.getText();
					} else if (text == 'fieldLabel') {
						fieldLabel = parser.getText();
					} else if (text == 'fieldDescription') {
						fieldDescription = parser.getText();
					} else if (text == 'fieldType') {
						fieldType = parser.getText();
					} else if (text == 'fieldRelationshipLabel') {
						fieldRelationshipLabel = parser.getText();
					} else if (text == 'fieldRelationshipName') {
						fieldRelationshipName = parser.getText();
					} else if (text == 'fieldReferenceTo') {
						fieldReferenceTo = parser.getText();
					} else if (text == 'fieldExternalId') {
						fieldExternalId = parser.getBooleanValue();
					} else if (text == 'fieldLength') {
						fieldLength = parser.getIntegerValue();
					} else if (text == 'fieldPrecision') {
						fieldPrecision = parser.getIntegerValue();
					} else if (text == 'fieldScale') {
						fieldScale = parser.getIntegerValue();
					} else if (text == 'fieldVisibleLines') {
						fieldVisibleLines = parser.getIntegerValue();
					} else if (text == 'fieldDefaultValue') {
						fieldDefaultValue = parser.getText();
					} else if (text == 'fieldPickListValues') {
						fieldPickListValues = parser.getText();
					} else {
						System.debug(LoggingLevel.WARN, 'SFDC_Data_Service consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	
	public static SFDC_Data_Service_JSON parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new SFDC_Data_Service_JSON(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	




}